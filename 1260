from collections import deque

n, m, v = map(int, input().split())
visited = [0] * (n+1) # 방문노드 기록
matrix = [[0] * (n+1) for _ in range(n+1)]

for i in range(m): # 매트릭스 입력
    a, b = map(int, input().split())
    matrix[a][b] = matrix[b][a] = 1
    
def dfs(v): # dfs 함수 정의
    visited[v] = 1
    print(v, end=' ')
    for i in range(1, n+1):
        if (visited[i]==0 and matrix[v][i]==1):
            dfs(i)
            
def bfs(v):
    queue = deque([v])
    visited[v] = 1
    while queue:
        v = queue.popleft()
        print(v, end=' ')
        for i in range(1, n+1):
            if(visited[i]==0 and matrix[v][i]==1):
                queue.append(i)
                visited[i] = 1

dfs(v)
print()
visited = [0] * (n+1)
bfs(v)